#!/usr/bin/node

const fs = require('fs');
const cp = require('child_process');
const { exit } = require('process');

const outputRootPath = process.argv[2];
const targetCulture = process.argv[3];
const fallbackCulture = process.argv[4] || 'en-ca';

if (!outputRootPath) {
    console.error("specify output folder path");
    exit(-1);
}

if (!targetCulture) {
    console.error("specify target cutlure code");
    process.exit(-1);
}

if (!fs.existsSync(outputRootPath)) {
    fs.mkdirSync(outputRootPath, {
        recursive: true
    });
}

const rootPath = __dirname.replace(/\\/g, "/").replace(/\/[^\/]+$/, "");
const inputRootPath = `${rootPath}/src`;
const resourceRootPath = `${rootPath}/resources`;

fs.readdirSync(inputRootPath)
    .filter(filename => filename.indexOf(".src.") > 0)
    .forEach(filename => {
        const outputFileName = filename.replace(".src.", ".");
        const inputFilePath = `${inputRootPath}/${filename}`;
        const outputFilePath = `${outputRootPath}/${outputFileName}`;
        const resourceFilePath = `${resourceRootPath}/${targetCulture}/${outputFileName}.json`;
        const fallbackResourceFilePath = `${resourceRootPath}/${fallbackCulture}/${outputFileName}.json`;
        if (fs.existsSync(resourceFilePath)) {
            cp.fork(`${__dirname}/applyrsc`, [ inputFilePath, outputFilePath, resourceFilePath, fallbackResourceFilePath ]);
        }
    });
